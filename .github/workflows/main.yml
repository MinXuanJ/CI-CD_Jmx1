name: SLACK_NOTIFICATION

on: 
  push:
    branches: 
      - 'v[0-9]+.[0-9]+'
      - master
    paths-ignore:
      - '**/#NORUN*'
    
jobs:
  SLACK_NOTIFICATION: 
    runs-on: ubuntu-latest
    
    steps: 
    - 
      name: Checkout Repo
      id: checkout_repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - 
      name: Scan Pipeline Vunerability
      id: scan_pipeline
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        ignore-unfixed: true
        format: 'table'
        output: 'trivy-report.txt'
        exit-code: '1'
        severity: 'CRITICAL'
     
    -
      name: Report Failure Messgae
      id: report_failure
      if: steps.scan_pipeline.outcome == 'failure'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_OLD}}
        SLACK_TITLE: 'Pipeline Scan Failed'
        SLACK_MESSAGE: 'FAILED TRIVY SCAN'

    - 
      name: Display Trivy Report
      run: cat trivy-report.txt

    -
      name: Set up QEMU
      if: steps.scan_pipeline.outcome == 'success'
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      if: steps.scan_pipeline.outcome == 'success'
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      if: steps.scan_pipeline.outcome == 'success'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and Push
      id: docker_build
      if: steps.scan_pipeline.outcome == 'success'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: jmx139/go-fortune_jmx:${{ github.sha }}
    
    - 
      name: Install Cosign
      if: steps.scan_pipeline.outcome == 'success'
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.1.1'
    - 
      name: Check install
      if: steps.scan_pipeline.outcome == 'success'
      run: cosign version
    
    -
      name: Sign Image
      if: steps.scan_pipeline.outcome == 'success'
      run: cosign sign docker.io/jmx139/go-fortune_jmx@${{ steps.docker_build.outputs.digest }}
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        cosign_private_key: ${{ secrets.COSIGN_PRIVATE_KEY }}
        digest: ${{ steps.docker_build.outputs.digest }}
    -
      name : Verify Singature
      if: steps.scan_pipeline.outcome == 'success'
      run: cosign verify --key cosign.pub docker.io/jmx139/go-fortune_jmx@${{ steps.docker_build.outputs.digest }}
      env:
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        cosign_public_key: ${{ secrets.COSIGN_PUBLIC_KEY }}
        digest: ${{ steps.docker_build.outputs.digest }}
    -
      name: Report Success Messgae
      if: steps.scan_pipeline.outcome == 'success'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_OLD}}
        SLACK_TITLE: 'Pipeline Scan SUCCESSED'
        SLACK_MESSAGE: 'SUCCESS TRIVY SCAN'


    - 
      name: Upload Trivy Report
      id: upload_trivy_report
      uses: MeilCli/slack-upload-file@v3
      if: always()
      with:
        slack_token: ${{ secrets.SLACK_BOT_TOKEN_OLD }}
        channel_id: ${{ secrets.SLACK_CHANNELID_TEST_OLD}}
        file_path: 'trivy-report.txt'
        initial_comment: 'Report by Jmx'
      
          